{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\Project\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\ImageGallery\\\\ImageGallery.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ImageGallery.module.css';\nimport { Button } from 'components/Button/Button';\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport { Loader } from 'components/Loader/Loader';\nimport API from '../../servises/api-images.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ImageGallery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchName: '',\n      images: [],\n      // Initialize images as an empty array\n      page: 1,\n      loading: false,\n      error: null,\n      status: 'idle',\n      showButton: false\n    };\n\n    this.handleLoadMore = () => {\n      const page = this.state.page;\n      console.log('page: ', page);\n      const name = this.props.searchName.searchName;\n      API.fetchImages(name, page).then(newImages => {\n        this.setState({\n          images: [...this.state.images, ...newImages.hits],\n          page: page + 1,\n          status: 'resolved',\n          loading: false\n        });\n\n        if (Math.ceil(newImages.totalHits / 12) === page) {\n          this.setState({\n            showButton: false\n          });\n        }\n      }).catch(error => this.setState({\n        error,\n        status: 'rejected',\n        loading: false\n      }));\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.searchName.searchName;\n    const newName = this.props.searchName.searchName;\n\n    if (prevName !== newName) {\n      this.setState({\n        status: 'pending'\n      });\n      const page = 1;\n      setTimeout(() => {\n        API.fetchImages(newName, page).then(newImages => {\n          console.log(newImages);\n          this.setState({\n            images: newImages.hits,\n            page: page + 1,\n            status: 'resolved',\n            loading: false,\n            showButton: true\n          });\n\n          if (Math.ceil(newImages.totalHits / 12) === page) {\n            this.setState({\n              showButton: false\n            });\n          }\n        }).catch(error => this.setState({\n          error,\n          status: 'rejected',\n          loading: false\n        }));\n      }, 1000);\n    }\n  }\n\n  render() {\n    const {\n      images,\n      status,\n      showButton\n    } = this.state;\n\n    if (status === 'pending') {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'rejected') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0412\\u0441\\u0435 \\u043F\\u043B\\u043E\\u0445\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'resolved') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: css.ImageGallery,\n          children: images.map(_ref => {\n            let {\n              id,\n              largeImageURL,\n              tags\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n              src: largeImageURL,\n              alt: tags\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), showButton && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleLoadMore,\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    return null;\n  }\n\n}\nImageGallery.propTypes = {\n  searchName: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:/Users/denis/Project/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["React","Component","PropTypes","css","Button","ImageGalleryItem","Loader","API","ImageGallery","state","searchName","images","page","loading","error","status","showButton","handleLoadMore","console","log","name","props","fetchImages","then","newImages","setState","hits","Math","ceil","totalHits","catch","componentDidUpdate","prevProps","prevState","prevName","newName","setTimeout","render","map","id","largeImageURL","tags","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './ImageGallery.module.css';\r\nimport { Button } from 'components/Button/Button';\r\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport API from '../../servises/api-images.js';\r\n\r\n\r\nexport class ImageGallery extends Component {\r\n  state = {\r\n    searchName: '',\r\n    images: [], // Initialize images as an empty array\r\n    page: 1,\r\n    loading: false,\r\n    error: null,\r\n    status: 'idle',\r\n    showButton: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    searchName: PropTypes.object.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.searchName.searchName;\r\n    const newName = this.props.searchName.searchName;\r\n    if (prevName !== newName) {\r\n      this.setState({ status: 'pending' });\r\n      const page = 1;\r\n      setTimeout(() => {\r\n        API.fetchImages(newName, page)\r\n          .then(newImages => {\r\n            console.log(newImages);\r\n            this.setState({\r\n              images: newImages.hits,\r\n              page: page + 1,\r\n              status: 'resolved',\r\n              loading: false,\r\n              showButton: true,\r\n            });\r\n            if (Math.ceil(newImages.totalHits / 12) === page) {\r\n              this.setState({\r\n                showButton: false,\r\n              });\r\n            }\r\n          })\r\n          .catch(error =>\r\n            this.setState({ error, status: 'rejected', loading: false })\r\n          );\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  handleLoadMore = () => {\r\n    const page = this.state.page;\r\n    console.log('page: ', page);\r\n    const name = this.props.searchName.searchName;\r\n    API.fetchImages(name, page)\r\n      .then(newImages => {\r\n        this.setState({\r\n          images: [...this.state.images, ...newImages.hits],\r\n          page: page + 1,\r\n          status: 'resolved',\r\n          loading: false,\r\n        });\r\n        if (Math.ceil(newImages.totalHits / 12) === page) {\r\n          this.setState({\r\n            showButton: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error, status: 'rejected', loading: false })\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { images, status, showButton } = this.state;\r\n\r\n    if (status === 'pending') {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <div>Все плохо</div>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className={css.ImageGallery}>\r\n            {images.map(({ id, largeImageURL, tags }) => (\r\n              <ImageGalleryItem key={id} src={largeImageURL} alt={tags} />\r\n            ))}\r\n          </ul>\r\n          {showButton && (\r\n            <Button onClick={this.handleLoadMore}>Load more</Button>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}