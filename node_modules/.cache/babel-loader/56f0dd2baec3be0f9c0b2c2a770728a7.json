{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\Project\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport css from './App.module.css';\nimport { ToastContainer } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { fetchImages } from '../../servises/api-images.js';\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from './Loader/Loader';\nimport { Modal } from '../Modal/Modal';\nimport { warnNoImages, noImagesFound, errorToastify } from '../Notifix/Notifix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchName: '',\n      images: [],\n      page: 1,\n      loading: false,\n      error: null,\n      status: 'idle',\n      showButton: false,\n      showModal: false,\n      selectedImageUrl: '',\n      alt: ''\n    };\n\n    this.handleSubmit = searchName => {\n      console.log('searchName: ', searchName);\n      this.setState({\n        searchName: searchName\n      });\n    };\n\n    this.handleLoadMore = () => {\n      const page = this.state.page;\n      const name = this.props.searchName.searchName;\n      fetchImages(name, page).then(newImages => {\n        this.setState({\n          images: [...this.state.images, ...newImages.hits],\n          page: page + 1,\n          status: 'resolved',\n          loading: false\n        });\n\n        if (Math.ceil(newImages.totalHits / 12) === page) {\n          warnNoImages();\n          this.setState({\n            showButton: false\n          });\n        }\n      }).catch(error => this.setState({\n        error,\n        status: 'rejected',\n        loading: false\n      }));\n    };\n\n    this.openModal = (imageUrl, tags) => {\n      this.setState({\n        showModal: true,\n        selectedImageUrl: imageUrl,\n        alt: tags\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false,\n        selectedImageUrl: ''\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.searchName;\n    const newName = this.props.searchName;\n    console.log('newName: ', newName);\n\n    if (prevName !== newName) {\n      this.setState({\n        status: 'pending'\n      });\n      const page = 1;\n      setTimeout(() => {\n        fetchImages(newName, page).then(newImages => {\n          if (newImages.hits.length === 0) {\n            noImagesFound(newName);\n            return this.setState({\n              status: 'idle',\n              loading: false\n            });\n          }\n\n          this.setState({\n            images: newImages.hits,\n            page: page + 1,\n            status: 'resolved',\n            loading: false,\n            showButton: true\n          });\n\n          if (Math.ceil(newImages.totalHits / 12) === page) {\n            warnNoImages();\n            this.setState({\n              showButton: false\n            });\n          }\n        }).catch(error => this.setState({\n          error,\n          status: 'rejected',\n          loading: false\n        }));\n      }, 1000);\n    }\n  }\n\n  render() {\n    const {\n      images,\n      status,\n      showButton,\n      showModal,\n      selectedImageUrl,\n      alt\n    } = this.state;\n    const {\n      openModal,\n      handleLoadMore,\n      closeModal\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.App,\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: css.ImageGallery,\n        children: images.map(_ref => {\n          let {\n            id,\n            largeImageURL,\n            tags\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n            src: largeImageURL,\n            alt: tags,\n            onClick: () => openModal(largeImageURL, tags)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.propTypes = {\n  searchName: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["C:/Users/denis/Project/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["React","Component","Searchbar","ImageGallery","css","ToastContainer","PropTypes","fetchImages","ImageGalleryItem","Button","Loader","Modal","warnNoImages","noImagesFound","errorToastify","App","state","searchName","images","page","loading","error","status","showButton","showModal","selectedImageUrl","alt","handleSubmit","console","log","setState","handleLoadMore","name","props","then","newImages","hits","Math","ceil","totalHits","catch","openModal","imageUrl","tags","closeModal","componentDidUpdate","prevProps","prevState","prevName","newName","setTimeout","length","render","map","id","largeImageURL","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Searchbar } from './Searchbar/Searchbar';\r\nimport { ImageGallery } from './ImageGallery/ImageGallery';\r\nimport css from './App.module.css'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { fetchImages } from '../../servises/api-images.js';\r\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\r\nimport { Button } from 'components/Button/Button';\r\nimport { Loader } from './Loader/Loader';\r\nimport { Modal } from '../Modal/Modal';\r\nimport { warnNoImages, noImagesFound, errorToastify } from '../Notifix/Notifix';\r\n\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    searchName: '',\r\n    images: [],\r\n    page: 1,\r\n    loading: false,\r\n    error: null,\r\n    status: 'idle',\r\n    showButton: false,\r\n    showModal: false,\r\n    selectedImageUrl: '',\r\n    alt: '',\r\n  };\r\n\r\n  handleSubmit = searchName => {\r\n    console.log('searchName: ', searchName);\r\n    this.setState({ searchName: searchName });\r\n  };\r\n\r\n  static propTypes = {\r\n    searchName: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.searchName;\r\n    const newName = this.props.searchName;\r\n    console.log('newName: ', newName);\r\n    if (prevName !== newName) {\r\n      this.setState({ status: 'pending' });\r\n      const page = 1;\r\n      setTimeout(() => {\r\n        fetchImages(newName, page)\r\n          .then(newImages => {\r\n            if (newImages.hits.length === 0) {\r\n              noImagesFound(newName);\r\n              return this.setState({\r\n                status: 'idle',\r\n                loading: false,\r\n              });\r\n            }\r\n            this.setState({\r\n              images: newImages.hits,\r\n              page: page + 1,\r\n              status: 'resolved',\r\n              loading: false,\r\n              showButton: true,\r\n            });\r\n\r\n            if (Math.ceil(newImages.totalHits / 12) === page) {\r\n              warnNoImages();\r\n              this.setState({\r\n                showButton: false,\r\n              });\r\n            }\r\n          })\r\n          .catch(error =>\r\n            this.setState({ error, status: 'rejected', loading: false })\r\n          );\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  handleLoadMore = () => {\r\n    const page = this.state.page;\r\n    const name = this.props.searchName.searchName;\r\n    fetchImages(name, page)\r\n      .then(newImages => {\r\n        this.setState({\r\n          images: [...this.state.images, ...newImages.hits],\r\n          page: page + 1,\r\n          status: 'resolved',\r\n          loading: false,\r\n        });\r\n        if (Math.ceil(newImages.totalHits / 12) === page) {\r\n          warnNoImages();\r\n          this.setState({\r\n            showButton: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error, status: 'rejected', loading: false })\r\n      );\r\n  };\r\n\r\n  openModal = (imageUrl, tags) => {\r\n    this.setState({ showModal: true, selectedImageUrl: imageUrl, alt: tags });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false, selectedImageUrl: '' });\r\n  };\r\n\r\n  render() {\r\n          const {\r\n            images,\r\n            status,\r\n            showButton,\r\n            showModal,\r\n            selectedImageUrl,\r\n            alt,\r\n          } = this.state;\r\n          const { openModal, handleLoadMore, closeModal } = this;\r\n    return (\r\n      <div className={css.App}>\r\n        <Searchbar onSubmit={this.handleSubmit} />\r\n        <ul className={css.ImageGallery}>\r\n          {images.map(({ id, largeImageURL, tags }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              src={largeImageURL}\r\n              alt={tags}\r\n              onClick={() => openModal(largeImageURL, tags)}\r\n            />\r\n          ))}\r\n        </ul>\r\n        {/* <ImageGallery searchName={this.state.searchName} />\r\n        {status === 'rejected' && <Loader />} */}\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}