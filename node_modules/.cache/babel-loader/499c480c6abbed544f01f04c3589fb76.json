{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\Project\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\ImageGallery\\\\ImageGallery.jsx\";\nimport React, { Component } from 'react';\nimport css from './ImageGallery.module.css';\nimport { fetchImages } from '../../servises/api-images.js';\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport { warnNoImages, noImagesFound, errorToastify } from '../Notifix/Notifix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ImageGallery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchName: '',\n      images: [],\n      page: 1,\n      loading: false,\n      error: null,\n      status: 'idle',\n      showButton: false,\n      showModal: false,\n      selectedImageUrl: ''\n    };\n\n    this.handleLoadMore = () => {\n      const page = this.state.page;\n      console.log('page: ', page);\n      const name = this.props.searchName.searchName;\n      fetchImages(name, page).then(newImages => {\n        this.setState({\n          images: [...this.state.images, ...newImages.hits],\n          page: page + 1,\n          status: 'resolved',\n          loading: false\n        });\n\n        if (Math.ceil(newImages.totalHits / 12) === page) {\n          warnNoImages();\n          this.setState({\n            showButton: false\n          });\n        }\n      }).catch(error => this.setState({\n        error,\n        status: 'rejected',\n        loading: false\n      }));\n    };\n\n    this.openModal = imageUrl => {\n      console.log('imageUrl: ', imageUrl);\n      console.log(this.state.showModal);\n      this.setState({\n        showModal: true,\n        selectedImageUrl: imageUrl\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false,\n        selectedImageUrl: ''\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.searchName.searchName;\n    const newName = this.props.searchName.searchName;\n\n    if (prevName !== newName) {\n      this.setState({\n        status: 'pending'\n      });\n      const page = 1;\n      setTimeout(() => {\n        fetchImages(newName, page).then(newImages => {\n          if (newImages.hits.length === 0) {\n            console.log('this.state.images.length: ', newImages.hits.length);\n            noImagesFound();\n            return this.setState({\n              status: 'idle',\n              loading: false\n            });\n          }\n\n          this.setState({\n            images: newImages.hits,\n            page: page + 1,\n            status: 'resolved',\n            loading: false,\n            showButton: true\n          });\n\n          if (Math.ceil(newImages.totalHits / 12) === page) {\n            warnNoImages();\n            this.setState({\n              showButton: false\n            });\n          }\n        }).catch(error => this.setState({\n          error,\n          status: 'rejected',\n          loading: false\n        }));\n      }, 1000);\n    }\n  }\n\n  render() {\n    const {\n      images,\n      status,\n      showButton,\n      showModal,\n      selectedImageUrl\n    } = this.state;\n\n    if (status === 'pending') {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'rejected') {\n      errorToastify();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"An error has occurred, please try again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'resolved') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: css.ImageGallery,\n          children: images.map(_ref => {\n            let {\n              id,\n              largeImageURL,\n              tags\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n              src: largeImageURL,\n              alt: tags,\n              onClick: () => this.openModal(largeImageURL)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), showButton && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleLoadMore,\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n          imageUrl: selectedImageUrl,\n          onClose: this.closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    return null;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/denis/Project/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["React","Component","css","fetchImages","ImageGalleryItem","Button","Loader","Modal","warnNoImages","noImagesFound","errorToastify","ImageGallery","state","searchName","images","page","loading","error","status","showButton","showModal","selectedImageUrl","handleLoadMore","console","log","name","props","then","newImages","setState","hits","Math","ceil","totalHits","catch","openModal","imageUrl","closeModal","componentDidUpdate","prevProps","prevState","prevName","newName","setTimeout","length","render","map","id","largeImageURL","tags"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport css from './ImageGallery.module.css';\r\nimport {fetchImages} from '../../servises/api-images.js';\r\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\r\nimport { Button } from 'components/Button/Button';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport Modal from '../Modal/Modal';\r\nimport { warnNoImages, noImagesFound, errorToastify } from '../Notifix/Notifix';\r\n\r\nexport class ImageGallery extends Component {\r\n  state = {\r\n    searchName: '',\r\n    images: [],\r\n    page: 1,\r\n    loading: false,\r\n    error: null,\r\n    status: 'idle',\r\n    showButton: false,\r\n    showModal: false,\r\n    selectedImageUrl: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.searchName.searchName;\r\n    const newName = this.props.searchName.searchName;\r\n    if (prevName !== newName) {\r\n      this.setState({ status: 'pending' });\r\n      const page = 1;\r\n      setTimeout(() => {\r\n        fetchImages(newName, page)\r\n          .then(newImages => {\r\n            if (newImages.hits.length === 0) {\r\n              console.log('this.state.images.length: ', newImages.hits.length);\r\n              noImagesFound();\r\n              return this.setState({\r\n                status: 'idle',\r\n                loading: false,\r\n              });\r\n            }\r\n            this.setState({\r\n              images: newImages.hits,\r\n              page: page + 1,\r\n              status: 'resolved',\r\n              loading: false,\r\n              showButton: true,\r\n            });\r\n            if (Math.ceil(newImages.totalHits / 12) === page) {\r\n              warnNoImages();\r\n              this.setState({\r\n                showButton: false,\r\n              });\r\n            }\r\n          })\r\n          .catch(error =>\r\n            this.setState({ error, status: 'rejected', loading: false })\r\n          );\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  handleLoadMore = () => {\r\n    const page = this.state.page;\r\n    console.log('page: ', page);\r\n    const name = this.props.searchName.searchName;\r\n    fetchImages(name, page)\r\n      .then(newImages => {\r\n        this.setState({\r\n          images: [...this.state.images, ...newImages.hits],\r\n          page: page + 1,\r\n          status: 'resolved',\r\n          loading: false,\r\n        });\r\n        if (Math.ceil(newImages.totalHits / 12) === page) {\r\n          warnNoImages();\r\n          this.setState({\r\n            showButton: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error, status: 'rejected', loading: false })\r\n      );\r\n  };\r\n\r\n  openModal = imageUrl => {\r\n    console.log('imageUrl: ', imageUrl);\r\n    console.log(this.state.showModal);\r\n\r\n    this.setState({ showModal: true, selectedImageUrl: imageUrl });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false, selectedImageUrl: '' });\r\n  };\r\n\r\n  render() {\r\n    const { images, status, showButton, showModal, selectedImageUrl } =\r\n      this.state;\r\n\r\n    if (status === 'pending') {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      errorToastify();\r\n      return <div>An error has occurred, please try again!</div>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className={css.ImageGallery}>\r\n            {images.map(({ id, largeImageURL, tags }) => (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                src={largeImageURL}\r\n                alt={tags}\r\n                onClick={() => this.openModal(largeImageURL)}\r\n              />\r\n            ))}\r\n          </ul>\r\n          {showButton && (\r\n            <Button onClick={this.handleLoadMore}>Load more</Button>\r\n          )}\r\n\r\n          {showModal && (\r\n            <Modal imageUrl={selectedImageUrl} onClose={this.closeModal} />\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}