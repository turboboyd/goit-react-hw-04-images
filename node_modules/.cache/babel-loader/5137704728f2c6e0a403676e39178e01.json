{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\Project\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\ImageGallery\\\\ImageGallery.jsx\";\nimport React, { Component } from 'react';\nimport css from './ImageGallery.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ImageGallery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      imagesSearch: null,\n      page: 1,\n      loding: false,\n      error: null,\n      status: 'idle'\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.searchName;\n    const newName = this.props.searchName;\n    const KEY = '37071230-d6b04d3068f1a0950a5b376a5';\n    const page = this.state.page;\n    const name = newName.searchName;\n\n    if (prevName !== newName) {\n      this.setState({\n        status: 'pending',\n        imagesSearch: null\n      });\n      setTimeout(() => {\n        fetch(`https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`).then(res => {\n          if (res.ok) {\n            return res.json();\n          }\n\n          return Promise.reject(new Error('Пусто 2'));\n        }).then(data => this.setState({\n          imagesSearch: data.hits,\n          status: 'resovled'\n        })).catch(error => this.setState({\n          error\n        })); // .finally(() => this.setState({ loding: false }));\n      }, 1000);\n    }\n  }\n\n  render() {\n    const {\n      imagesSearch,\n      status\n    } = this.state;\n    console.log('imagesSearch: ', imagesSearch);\n\n    if (status === 'pending') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'rejected') {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: \"\\u0412\\u0441\\u0435 \\u043F\\u043B\\u043E\\u0445\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this);\n    }\n\n    if (status === 'resovled') {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: css.ImageGallery,\n        children: imagesSearch.map(_ref => {\n          let {\n            id,\n            largeImageURL,\n            tags\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: largeImageURL,\n              alt: tags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} //   handleSubmit = () => {\n//   }\n//   userRequest = dataUser => {\n//     const searchName = dataUser.searchName;\n//     console.log('searchName: ', searchName);\n//     this.setState({ searchName: searchName });\n//     this.API(searchName);\n//   };\n//   API = name => {\n//     const KEY = '37071230-d6b04d3068f1a0950a5b376a5';\n//     const page = this.state.page;\n//     this.setState({ loding: true });\n//     fetch(\n//       `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n//     )\n//       .then(res => res.json())\n//       .then(data => this.setState({ imagesSearch: data.hits }))\n//       .finally(() => this.setState({ loding: false }));\n//   };\n//   render() {\n//     const imagesAnswer = this.state.imagesSearch;\n//     console.log('imagesAnswer: ', imagesAnswer);\n//     return (\n//       <div>\n//         <Searchbar onSubmit={this.userRequest} />\n//         <div>\n//           {imagesAnswer &&\n//             imagesAnswer.map(\n//               ({ id, largeImageURL, previewHeight, previewWidth, tags }) => (\n//                 <li className=\"gallery-item\" key={id}>\n//                   <img\n//                     width={previewWidth}\n//                     height={previewHeight}\n//                     src={largeImageURL}\n//                     alt={tags}\n//                   />\n//                 </li>\n//               )\n//             )}\n//         </div>\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/denis/Project/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["React","Component","css","ImageGallery","state","imagesSearch","page","loding","error","status","componentDidUpdate","prevProps","prevState","prevName","searchName","newName","props","KEY","name","setState","setTimeout","fetch","then","res","ok","json","Promise","reject","Error","data","hits","catch","render","console","log","map","id","largeImageURL","tags"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport css from './ImageGallery.module.css';\r\n\r\nexport class ImageGallery extends Component {\r\n  state = {\r\n    imagesSearch: null,\r\n    page: 1,\r\n    loding: false,\r\n    error: null,\r\n    status: 'idle',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.searchName;\r\n    const newName = this.props.searchName;\r\n\r\n    const KEY = '37071230-d6b04d3068f1a0950a5b376a5';\r\n    const page = this.state.page;\r\n    const name = newName.searchName;\r\n\r\n    if (prevName !== newName) {\r\n      this.setState({ status: 'pending', imagesSearch: null });\r\n\r\n      setTimeout(() => {\r\n        fetch(\r\n          `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n        )\r\n          .then(res => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            }\r\n            return Promise.reject(new Error('Пусто 2'));\r\n          })\r\n          .then(data => this.setState({ imagesSearch: data.hits, status: 'resovled' }))\r\n          .catch(error => this.setState({ error }))\r\n          // .finally(() => this.setState({ loding: false }));\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { imagesSearch, status } = this.state;\r\n    console.log('imagesSearch: ', imagesSearch);\r\n\r\n    if (status === 'pending') {\r\n      return <div>Загрузка</div>;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      <div>Все плохо</div>\r\n      \r\n    }\r\n\r\n    if (status === 'resovled') {\r\n      return (\r\n        <ul className={css.ImageGallery}>\r\n          {imagesSearch.map(({ id, largeImageURL, tags }) => (\r\n            <li key={id}>\r\n              <img src={largeImageURL} alt={tags} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n//   handleSubmit = () => {\r\n\r\n//   }\r\n\r\n//   userRequest = dataUser => {\r\n//     const searchName = dataUser.searchName;\r\n//     console.log('searchName: ', searchName);\r\n//     this.setState({ searchName: searchName });\r\n//     this.API(searchName);\r\n//   };\r\n\r\n//   API = name => {\r\n//     const KEY = '37071230-d6b04d3068f1a0950a5b376a5';\r\n//     const page = this.state.page;\r\n//     this.setState({ loding: true });\r\n//     fetch(\r\n//       `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n//     )\r\n//       .then(res => res.json())\r\n//       .then(data => this.setState({ imagesSearch: data.hits }))\r\n//       .finally(() => this.setState({ loding: false }));\r\n//   };\r\n\r\n//   render() {\r\n//     const imagesAnswer = this.state.imagesSearch;\r\n//     console.log('imagesAnswer: ', imagesAnswer);\r\n//     return (\r\n//       <div>\r\n//         <Searchbar onSubmit={this.userRequest} />\r\n//         <div>\r\n//           {imagesAnswer &&\r\n//             imagesAnswer.map(\r\n//               ({ id, largeImageURL, previewHeight, previewWidth, tags }) => (\r\n//                 <li className=\"gallery-item\" key={id}>\r\n//                   <img\r\n//                     width={previewWidth}\r\n//                     height={previewHeight}\r\n//                     src={largeImageURL}\r\n//                     alt={tags}\r\n//                   />\r\n//                 </li>\r\n//               )\r\n//             )}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}