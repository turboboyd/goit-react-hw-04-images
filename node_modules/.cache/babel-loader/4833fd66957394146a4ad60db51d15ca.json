{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\Project\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\ImageGallery\\\\ImageGallery.jsx\";\nimport React, { Component } from 'react';\nimport css from './ImageGallery.module.css';\nimport { Button } from 'components/Button/Button';\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchImages } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class ImageGallery extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchName: null,\n      imagesSearch: [],\n      // Initialize imagesSearch as an empty array\n      page: 1,\n      loading: false,\n      error: null,\n      status: 'idle'\n    };\n\n    this.fetchImages = (name, page, key) => {\n      this.setState({\n        loading: true\n      });\n      fetch(`https://pixabay.com/api/?q=${name}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(new Error('Пусто 2'));\n      }).then(data => {\n        this.setState({\n          imagesSearch: data.hits,\n          // Append new images to the existing imagesSearch\n          status: 'resolved',\n          loading: false\n        });\n      }).catch(error => this.setState({\n        error,\n        status: 'rejected',\n        loading: false\n      }));\n    };\n\n    this.handleLoadMore = () => {\n      console.log('Клик по кнопке Лодер');\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.searchName;\n    const newName = this.props.searchName;\n    const KEY = '37071230-d6b04d3068f1a0950a5b376a5';\n    const page = this.state.page;\n    const name = newName.searchName;\n\n    if (prevName !== newName) {\n      this.setState({\n        searchName: null,\n        imagesSearch: [],\n        page: 1\n      }); // Reset imagesSearch and page\n\n      this.fetchImages(name, page, KEY);\n    }\n  }\n\n  render() {\n    const {\n      imagesSearch,\n      status,\n      loading\n    } = this.state;\n\n    if (status === 'pending' || loading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'rejected') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0412\\u0441\\u0435 \\u043F\\u043B\\u043E\\u0445\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'resolved') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: css.ImageGallery,\n          children: imagesSearch.map(_ref => {\n            let {\n              id,\n              largeImageURL,\n              tags\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n              src: largeImageURL,\n              alt: tags\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), imagesSearch.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleLoadMore,\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    return null;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/denis/Project/goit-react-hw-03-image-finder/src/components/ImageGallery/ImageGallery.jsx"],"names":["React","Component","css","Button","ImageGalleryItem","Loader","fetchImages","ImageGallery","state","searchName","imagesSearch","page","loading","error","status","name","key","setState","fetch","then","res","ok","json","Promise","reject","Error","data","hits","catch","handleLoadMore","console","log","componentDidUpdate","prevProps","prevState","prevName","newName","props","KEY","render","map","id","largeImageURL","tags","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport css from './ImageGallery.module.css';\r\nimport { Button } from 'components/Button/Button';\r\nimport { ImageGalleryItem } from 'components/ImageGalleryItem/ImageGalleryItem';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { fetchImages } from './'\r\n\r\nexport class ImageGallery extends Component {\r\n  state = {\r\n    searchName: null,\r\n    imagesSearch: [], // Initialize imagesSearch as an empty array\r\n    page: 1,\r\n    loading: false,\r\n    error: null,\r\n    status: 'idle',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.searchName;\r\n    const newName = this.props.searchName;\r\n\r\n    const KEY = '37071230-d6b04d3068f1a0950a5b376a5';\r\n    const page = this.state.page;\r\n    const name = newName.searchName;\r\n\r\n    if (prevName !== newName) {\r\n      this.setState({ searchName: null, imagesSearch: [], page: 1 }); // Reset imagesSearch and page\r\n      this.fetchImages(name, page, KEY);\r\n    }\r\n  }\r\n\r\n  fetchImages = (name, page, key) => {\r\n    this.setState({ loading: true });\r\n\r\n    fetch(\r\n      `https://pixabay.com/api/?q=${name}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(new Error('Пусто 2'));\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          imagesSearch: data.hits, // Append new images to the existing imagesSearch\r\n          status: 'resolved',\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch(error =>\r\n        this.setState({ error, status: 'rejected', loading: false })\r\n      );\r\n  };\r\n\r\n  handleLoadMore = () => {\r\n    console.log('Клик по кнопке Лодер')\r\n  };\r\n\r\n  render() {\r\n    const { imagesSearch, status, loading } = this.state;\r\n\r\n    if (status === 'pending' || loading) {\r\n      return <Loader/>\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <div>Все плохо</div>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className={css.ImageGallery}>\r\n            {imagesSearch.map(({ id, largeImageURL, tags }) => (\r\n              <ImageGalleryItem key={id} src={largeImageURL} alt={tags} />\r\n            ))}\r\n          </ul>\r\n          {imagesSearch.length > 0 && (\r\n            <Button onClick={this.handleLoadMore}>Load more</Button>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}